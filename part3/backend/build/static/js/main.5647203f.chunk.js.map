{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","console","log","Footer","style","color","fontStyle","fontSize","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"+PAWeA,EATF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACfC,EAAQF,EAAKG,UAAY,qBAAsB,iBACpD,OACE,wBAAIC,UAAU,QAAQJ,EAAKK,QAC3B,4BAAQC,QAASL,GAAmBC,KCSzBK,EAbM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEtB,OADDC,QAAQC,IAAIF,GACK,OAAZA,EACK,KAIP,yBAAKJ,UAAU,SACZI,ICOQG,EAfA,SAAC,GAAgB,EAAdH,QAOjB,OACA,yBAAKI,MAPe,CACnBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKV,6BACA,uG,gBCYa,EArBA,WACb,IAAMC,EAAUC,IAAMC,IAHR,cAIRC,EAAc,CAClBC,GAAI,IACJf,QAAS,mCACTgB,KAAM,2BACNlB,WAAW,GAEb,OAAOa,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAaxC,EAVA,SAAAO,GAEb,OADgBT,IAAMU,KAdR,aAcsBD,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAnBF,aAmBE,YAAwBR,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCkF5BK,G,MAhGH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IACGlB,MAAK,SAAAmB,GACJT,EAASS,QAEZ,IAGH,IAAMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAA3C,GAAI,OAAIA,EAAKG,aAwD9B,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAAS6B,IACvB,6BACE,4BAAQ/B,QAAS,kBAAM8B,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BA/CeO,EAAYE,KAAI,SAAA5C,GAAI,OACrC,kBAAC,EAAD,CACE6C,IAAK7C,EAAKoB,GACVpB,KAAMA,EACNC,iBAAoB,kBApBG,SAAAmB,GACzB,IAAMpB,EAAO+B,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAE3B,KAAKA,KAC9B4B,EAAW,eAAQhD,EAAR,CAAcG,WAAYH,EAAKG,YAChDqC,EAAmBpB,EAAI4B,GACpB1B,MAAK,SAAA2B,GACNjB,EAASD,EAAMa,KAAI,SAAA5C,GAAI,OAAIA,EAAKoB,KAAOA,EAAKpB,EAAOiD,SAEpDC,OAAO,SAAAC,GACNb,EAAgB,SAAD,OAAUtC,EAAKK,QAAf,sCACf+C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAE3B,KAAOA,SAQViC,CAAmBrD,EAAKoB,WA8ClD,0BAAMkC,SArCM,SAACC,GACfA,EAAMC,iBAUN,IAAMC,EAAa,CACfpD,QAAS4B,EACTZ,MAAM,IAAIqC,MAAOC,cACjBxD,UAAWyD,KAAKC,SAAW,IAE/BrB,EAAmBiB,GAChBnC,MAAK,SAAA2B,GACJxC,QAAQC,IAAIuC,GACZjB,EAASD,EAAMN,OAAOwB,IACtBf,EAAW,SAkBX,2BACE4B,MAAO7B,EACP8B,SA7CiB,SAACR,GAExBrB,EAAWqB,EAAMS,OAAOF,UA6CpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,SC9FNC,IAASC,OACR,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.5647203f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n\tconst label = note.important ? 'make not important': 'make important'\n  return (\n    <li className='note'>{note.content}\n    <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n\tconsole.log(message)\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst Footer = ({ message }) => {\n\tconst footerStyle = {\n\t\tcolor: 'green',\n\t\tfontStyle: 'italic',\n\t\tfontSize: 16\n\t}\n\n\treturn (\n\t<div style={footerStyle}>\n\t\t<br />\n\t\t<em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n\t</div> \n\t)\n}\n\nexport default Footer","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update  }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\nimport './index.css'\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('') \n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n  useEffect(() => {\n    noteService.getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  \n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id===id)\n    const changedNote = { ...note, important: !note.important }\n    noteService.update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch( error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`) \n      setTimeout(() => {\n        setErrorMessage(null)        \n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  } \n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance = {() => toggleImportanceOf(note.id)}\n    />\n  )\n  \n  const handleNoteChange = (event) => {\n    // console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    // const noteObject = {\n    //   content: newNote,\n    //   date: new Date().toISOString(),\n    //   important: Math.random() > 0.5,\n    //   id: notes.length + 1,\n    // }\n\n    // setNotes(notes.concat(noteObject))\n    // setNewNote('')\n    const noteObject = {\n        content: newNote,\n        date: new Date().toISOString(),\n        important: Math.random() > 0.5,\n      }\n    noteService.create(noteObject)    \n      .then(returnedNote => {\n        console.log(returnedNote)   \n        setNotes(notes.concat(returnedNote))        \n        setNewNote('') \n      })\n  }\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote} \n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n\t<App />, \n\tdocument.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}